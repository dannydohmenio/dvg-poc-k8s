apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: '1'
  labels:
    app: dvg-poc-apache
    app.kubernetes.io/instance: dvg-poc
  name: dvg-poc-apache
  namespace: default
spec:
  progressDeadlineSeconds: 600
  replicas: 2
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: dvg-poc-apache
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: dvg-poc-apache
    spec:
      automountServiceAccountToken: true
      containers:
        - image: 'iodenbosch/dvg-poc:1.0.20'
          imagePullPolicy: IfNotPresent
          name: dvg-poc
          ports:
            - containerPort: 22
              protocol: TCP
            - containerPort: 80
              protocol: TCP
            - containerPort: 443
              protocol: TCP
          resources:
            limits:
              cpu: 2500m
              memory: 1536Mi
            requests:
              cpu: 150m
              memory: 768Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /var/www/project/htdocs/sites/default/files/
              mountPropagation: None
              name: drupal-files
            - mountPath: /var/www/project/htdocs/sites/default/settings.db.php
              mountPropagation: None
              name: drupal-settings
              subPath: settings
      dnsPolicy: ClusterFirst
      enableServiceLinks: true
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      shareProcessNamespace: false
      terminationGracePeriodSeconds: 30
      volumes:
        - name: drupal-files
          persistentVolumeClaim:
            claimName: efs-claim
        - configMap:
            defaultMode: 420
            name: dvg-drupal-settings
            optional: false
          name: drupal-settings
